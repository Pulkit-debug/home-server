version: "3"
##### services #####
services:
### ldap ###
 openldap:
  build:
   context: ./openldap
  domainname: example.com
  hostname: openldap
  environment:
    LDAP_LOG_LEVEL: "256"
    LDAP_ORGANISATION: "Example Inc."
    LDAP_DOMAIN: "example.com"
    LDAP_BASE_DN: "dc=example,dc=com"
    LDAP_ADMIN_PASSWORD: "Password1!"
    LDAP_CONFIG_PASSWORD: "Password1!"
    LDAP_READONLY_USER: "false"
    #LDAP_READONLY_USER_USERNAME: "readonly"
    #LDAP_READONLY_USER_PASSWORD: "readonly"
    LDAP_BACKEND: "hdb"
    LDAP_TLS: "true"
    LDAP_TLS_CRT_FILENAME: "ldap.crt"
    LDAP_TLS_KEY_FILENAME: "ldap.key"
    LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
    LDAP_TLS_ENFORCE: "false"
    LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
    LDAP_TLS_PROTOCOL_MIN: "3.1"
    LDAP_TLS_VERIFY_CLIENT: "demand"
    LDAP_REPLICATION: "false"
    #LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn="cn=admin,cn=config" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical"
    #LDAP_REPLICATION_DB_SYNCPROV: "binddn="cn=admin,$LDAP_BASE_DN" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase="$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1 starttls=critical"
    #LDAP_REPLICATION_HOSTS: "#PYTHON2BASH:['ldap://ldap.example.org','ldap://ldap2.example.org']"
    LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
    LDAP_SSL_HELPER_PREFIX: "ldap"
  tty: true
  stdin_open: true
  volumes:
    - './srv/var/lib/ldap:/var/lib/ldap'
    - './srv/etc/ldap/slapd.d:/etc/ldap/slapd.d'
    #- 'srv/container/service/slapd/assets/certs/:/container/service/slapd/assets/certs/'
  ports:
    #- "389:389"
    - "636:636"

 ldapaccountmanager:
  build:
   context: ./ldap-account-manager
  domainname: example.com
  hostname: ldapaccountmanager
  volumes:
   - './srv/var/lib/ldap-account-manager/config:/var/lib/ldap-account-manager/config'
  depends_on:
   - openldap

### jenkins ###
 jenkins:
  build:
   context: ./jenkins
  domainname: example.com
  hostname: jenkins
  volumes:
   - './srv/var/jenkins_home:/var/jenkins_home'
   - './srv/downloads:/downloads'
  depends_on:
   - openldap
  ports:
#  - "8080:8080"
   - "50000:50000"

### gitlab ###
 gitlab:
  build:
   context: ./gitlab
  domainname: example.com
  hostname: gitlab
  environment:
   GITLAB_OMNIBUS_CONFIG: |
    external_url 'http://gitlab.example.com'
    gitlab_rails['gitlab_shell_ssh_port'] = 2224
  ulimits:
   sigpending: 62793
   nproc: 131072
   nofile:
    soft: 20000
    hard: 40000
   core: 0

  ports:
#  - '80:80'
   - '2224:22'
  volumes:
   - './srv/etc/gitlab:/etc/gitlab'
   - './srv/var/opt/gitlab:/var/opt/gitlab'
   - './srv/var/log/gitlab:/var/log/gitlab'
   - '/etc/localtime:/etc/localtime:ro'
  depends_on:
   - openldap

### nextcloud ###
 nextcloud-db:
    image: mariadb
    volumes:
      - './srv/nextcloud/db-data:/var/lib/mysql'
    environment:
      - MYSQL_ROOT_PASSWORD=Password1!
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=Password1!

 nextcloud:
    image: ./nextcloud
    domainname: example.com
    hostname: nextcloud
    environment:
      - UID=1000
      - GID=1000
      - UPLOAD_MAX_SIZE=10G
      - APC_SHM_SIZE=128M
      - OPCACHE_MEM_SIZE=128
      - REDIS_MAX_MEMORY=64mb
      - CRON_PERIOD=15m
      - TZ=CET
      - ADMIN_USER=root
      - ADMIN_PASSWORD=Password1!
      - DB_TYPE=mysql
      - DB_NAME=nextcloud
      - DB_USER=nextcloud
      - DB_PASSWORD=Password1!
      - DB_HOST=nextcloud-db
    depends_on:
      - nextcloud-db
    volumes:
      - './srv/nextcloud/data:/data'
      - './srv/nextcloud/config:/config'
      - './srv/nextcloud/apps:/apps2'


### downloads ###
 downloads:
  build: ./downloads
  domainname: example.com
  hostname: download
  volumes:
   - './srv/downloads:/usr/local/apache2/htdocs/:ro'

### nginx ###
 nginx:
  build:
   context: ./nginx
  domainname: example.com
  hostname: nginx
  volumes:
   - './srv/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
   - './srv/nginx/conf.d:/etc/nginx/conf.d:ro'
   - './srv/nginx/certs:/etc/nginx/certs:rw'
   - './srv/etc/letsencrypt:/etc/letsencrypt:ro'
  ports:
   - "80:80"
   - "443:443"

##### volumes #####
